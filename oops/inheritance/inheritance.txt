   1) what is inheritance?

   Ans:- The process of inheriting the properties of the parent class into a child class is called inheritance.
         The existing class is called a base class or parent class and the new class is called a subclass or child
         class or derived class.

         The main purpose of inheritance is the reusability of code because we can use the existing class to create
         a new class instead of creating it from scratch.

         In inheritance, the child class acquires all the data members, properties, and functions from the parent class.
         Also, a child class can also provide its specific implementation to the methods of the parent class.



         Types Of Inheritance
         In Python, based upon the number of child and parent classes involved, there are five types of inheritance.
         The type of inheritance are listed below:

            1) Single  :- In single inheritance, a child class inherits from a single-parent class.

            2) Multiple Inheritance :- In multiple inheritance, one child class can inherit from multiple parent classes.

            3) Multilevel inheritance :- In multilevel inheritance, a class inherits from a child class or derived class.
                                         Suppose three classes A, B, C. A is the superclass, B is the child class of A, C is the
                                         child class of B. In other words, we can say a chain of classes is called multilevel inheritance.

            4) Hierarchical Inheritance :- In Hierarchical inheritance, more than one child class is derived from a single parent class.
                                           In other words, we can say one parent class and multiple child classes.

            5) Hybrid Inheritance :- When inheritance is consists of multiple types or a combination of different inheritance is called hybrid
                                     inheritance.