1) What is class ?

Ans:- The class is a user-defined data structure that binds the data members and methods into a single unit.
      Class is a blueprint or code template for object creation. Using a class, you can create as many objects
      as you want.

      Create a Class in Python

          syntext :

                  class student:
                        <statement 1>
                        <statement 2>
                        .
                        .
                        <statement N>

          example:-
                class Person:
                    def __init__(self, name, sex, profession):
                        # data members (state)(instance variables)
                        self.name = name
                        self.sex = sex
                        self.profession = profession

                    # Behavior (instance methods)
                    def show(self):
                        print('Name:', self.name, 'Sex:', self.sex, 'Profession:', self.profession)

                    # Behavior (instance methods)
                    def work(self):
                        print(self.name, 'working as a', self.profession)





2) what is objects?

Ans:-  An object is an instance of a class. It is a collection of attributes (variables) and methods.
       We use the object of a class to perform actions.

       Objects have two characteristics: They have states and behaviors (object has attributes and methods attached to it)
       Attributes represent its state,and methods represent its behavior. Using its methods, we can modify its state.

       Identity: Every object must be uniquely identified.

       State: An object has an attribute that represents a state of an object, and it also reflects the property of an object.

       Behavior: An object has methods that represent its behavior.

       objects are created from the same class, but they have different states and behaviors.


       Create Object of a Class

       The object is also called the instance of a class.

       syntext:

            <object-name> = <class-name>(<arguments>)

       example:

            jessa = Person('Jessa', 'Female', 'Software Engineer')



Class Attributes

    When we design a class, we use instance variables and class variables.
    In Class, attributes can be defined into two parts:



    Instance variables: The instance variables are attributes attached to an instance of a class.
                        We define instance variables in the constructor ( the __init__() method of a class).

    Class Variables: A class variable is a variable that is declared inside of class,
                     but outside of any instance method or __init__() method.



Class Methods

In Object-oriented programming, Inside a Class, we can define the following three types of methods.

    Instance method: Used to access or modify the object state.
                     If we use instance variables inside a method, such methods are called instance methods.

    Class method: Used to access or modify the class state. In method implementation,
                  if we use only class variables, then such type of methods we should declare as a class method.
                  A class method is bound to the class and not the object of the class. It can access only class variables.


    Static method: It is a general utility method that performs a task in isolation. Inside this method,
                   we don’t use instance or class variable because this static method doesn’t have access to the
                   class attributes.


reference

    https://pynative.com/python-classes-and-objects/

            
            
          




